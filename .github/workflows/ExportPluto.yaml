{"payload":{"allShortcutsEnabled":true,"fileTree":{".github/workflows":{"items":[{"name":"ExportPluto.yaml","path":".github/workflows/ExportPluto.yaml","contentType":"file"}],"totalCount":1},".github":{"items":[{"name":"workflows","path":".github/workflows","contentType":"directory"}],"totalCount":1},"":{"items":[{"name":".github","path":".github","contentType":"directory"},{"name":"My cool notebook.jl","path":"My cool notebook.jl","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"}],"totalCount":3}},"fileTreeProcessingTime":8.406678000000001,"foldersToFetch":[],"reducedMotionEnabled":"system","repo":{"id":327024636,"defaultBranch":"main","name":"static-export-template","ownerLogin":"JuliaPluto","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2021-01-05T15:32:12.000+01:00","ownerAvatar":"https://avatars.githubusercontent.com/u/74617459?v=4","public":true,"private":false},"refInfo":{"name":"main","listCacheKey":"v0:1678726675.579308","canEdit":true,"refType":"branch","currentOid":"08c02436be3198f6e931b28fcda1bcd7e772f5d3"},"path":".github/workflows/ExportPluto.yaml","currentUser":{"id":22795598,"login":"gdalle","userEmail":"guillaume.dalle.pro@gmail.com"},"blob":{"rawBlob":"name: Export Pluto notebooks\non:\n    push:\n        branches:\n            - main\n            - master\n    workflow_dispatch:\n\n# When two jobs run in parallel, cancel the older ones, to make sure that the website is generated from the most recent commit.\nconcurrency:\n    group: pluto-export\n    cancel-in-progress: true\n\n# This action needs permission to write the exported HTML file to the gh-pages branch.\npermissions:\n    contents: write\n    # (all other permission fields default to \"none\")\n\njobs:\n    build-and-deploy:\n        runs-on: ubuntu-latest\n        steps:\n            - name: Checkout this repository\n              uses: actions/checkout@v3\n\n            - name: Install Julia\n              uses: julia-actions/setup-julia@v1\n              with:\n                  version: \"1\" # This will automatically pick the latest Julia version\n\n            - name: Cache Julia artifacts & such\n              uses: julia-actions/cache@v1\n              with:\n                cache-registries: \"true\"\n\n            # We set up a folder that Pluto can use to cache exported notebooks. If the notebook file did not change, then Pluto can take the exported file from cache instead of running the notebook.\n            - name: Set up notebook state cache\n              uses: actions/cache@v3\n              with:\n                  path: pluto_state_cache\n                  key: ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}-${{ hashFiles('**/*jl') }}\n                  restore-keys: |\n                      ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}\n\n\n            - name: Run & export Pluto notebooks\n              run: |\n                julia -e 'using Pkg\n                  Pkg.activate(mktempdir())\n                  Pkg.add([\n                    Pkg.PackageSpec(name=\"PlutoSliderServer\", version=\"0.3.2-0.3\"),\n                  ])\n\n                  import PlutoSliderServer\n\n                  PlutoSliderServer.github_action(\".\";\n                    Export_cache_dir=\"pluto_state_cache\",\n                    Export_baked_notebookfile=false,\n                    Export_baked_state=false,\n                    # more parameters can go here\n                  )'\n\n\n            - name: Deploy to gh-pages\n              uses: JamesIves/github-pages-deploy-action@releases/v4\n              with:\n                  token: ${{ secrets.GITHUB_TOKEN }}\n                  branch: gh-pages\n                  folder: .\n                  single-commit: true\n","colorizedLines":["<span class=\"pl-ent\">name</span>: <span class=\"pl-s\">Export Pluto notebooks</span>","<span class=\"pl-ent\">on</span>:","    <span class=\"pl-ent\">push</span>:","        <span class=\"pl-ent\">branches</span>:","            - <span class=\"pl-s\">main</span>","            - <span class=\"pl-s\">master</span>","    <span class=\"pl-ent\">workflow_dispatch</span>:","","<span class=\"pl-c\"><span class=\"pl-c\">#</span> When two jobs run in parallel, cancel the older ones, to make sure that the website is generated from the most recent commit.</span>","<span class=\"pl-ent\">concurrency</span>:","    <span class=\"pl-ent\">group</span>: <span class=\"pl-s\">pluto-export</span>","    <span class=\"pl-ent\">cancel-in-progress</span>: <span class=\"pl-c1\">true</span>","","<span class=\"pl-c\"><span class=\"pl-c\">#</span> This action needs permission to write the exported HTML file to the gh-pages branch.</span>","<span class=\"pl-ent\">permissions</span>:","    <span class=\"pl-ent\">contents</span>: <span class=\"pl-s\">write</span>","    <span class=\"pl-c\"><span class=\"pl-c\">#</span> (all other permission fields default to &quot;none&quot;)</span>","","<span class=\"pl-ent\">jobs</span>:","    <span class=\"pl-ent\">build-and-deploy</span>:","        <span class=\"pl-ent\">runs-on</span>: <span class=\"pl-s\">ubuntu-latest</span>","        <span class=\"pl-ent\">steps</span>:","            - <span class=\"pl-ent\">name</span>: <span class=\"pl-s\">Checkout this repository</span>","              <span class=\"pl-ent\">uses</span>: <span class=\"pl-s\">actions/checkout@v3</span>","","            - <span class=\"pl-ent\">name</span>: <span class=\"pl-s\">Install Julia</span>","              <span class=\"pl-ent\">uses</span>: <span class=\"pl-s\">julia-actions/setup-julia@v1</span>","              <span class=\"pl-ent\">with</span>:","                  <span class=\"pl-ent\">version</span>: <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>1<span class=\"pl-pds\">&quot;</span></span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> This will automatically pick the latest Julia version</span>","","            - <span class=\"pl-ent\">name</span>: <span class=\"pl-s\">Cache Julia artifacts &amp; such</span>","              <span class=\"pl-ent\">uses</span>: <span class=\"pl-s\">julia-actions/cache@v1</span>","              <span class=\"pl-ent\">with</span>:","                <span class=\"pl-ent\">cache-registries</span>: <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>true<span class=\"pl-pds\">&quot;</span></span>","","            <span class=\"pl-c\"><span class=\"pl-c\">#</span> We set up a folder that Pluto can use to cache exported notebooks. If the notebook file did not change, then Pluto can take the exported file from cache instead of running the notebook.</span>","            - <span class=\"pl-ent\">name</span>: <span class=\"pl-s\">Set up notebook state cache</span>","              <span class=\"pl-ent\">uses</span>: <span class=\"pl-s\">actions/cache@v3</span>","              <span class=\"pl-ent\">with</span>:","                  <span class=\"pl-ent\">path</span>: <span class=\"pl-s\">pluto_state_cache</span>","                  <span class=\"pl-ent\">key</span>: <span class=\"pl-s\">${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles(&#39;**/Project.toml&#39;, &#39;**/Manifest.toml&#39;, &#39;.github/workflows/*&#39; ) }}-${{ hashFiles(&#39;**/*jl&#39;) }}</span>","                  <span class=\"pl-ent\">restore-keys</span>: <span class=\"pl-s\">|</span>","<span class=\"pl-s\">                      ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles(&#39;**/Project.toml&#39;, &#39;**/Manifest.toml&#39;, &#39;.github/workflows/*&#39; ) }}</span>","<span class=\"pl-s\"></span>","<span class=\"pl-s\"></span>","<span class=\"pl-s\"></span>            - <span class=\"pl-ent\">name</span>: <span class=\"pl-s\">Run &amp; export Pluto notebooks</span>","              <span class=\"pl-ent\">run</span>: <span class=\"pl-s\">|</span>","<span class=\"pl-s\">                julia -e &#39;using Pkg</span>","<span class=\"pl-s\">                  Pkg.activate(mktempdir())</span>","<span class=\"pl-s\">                  Pkg.add([</span>","<span class=\"pl-s\">                    Pkg.PackageSpec(name=&quot;PlutoSliderServer&quot;, version=&quot;0.3.2-0.3&quot;),</span>","<span class=\"pl-s\">                  ])</span>","<span class=\"pl-s\"></span>","<span class=\"pl-s\">                  import PlutoSliderServer</span>","<span class=\"pl-s\"></span>","<span class=\"pl-s\">                  PlutoSliderServer.github_action(&quot;.&quot;;</span>","<span class=\"pl-s\">                    Export_cache_dir=&quot;pluto_state_cache&quot;,</span>","<span class=\"pl-s\">                    Export_baked_notebookfile=false,</span>","<span class=\"pl-s\">                    Export_baked_state=false,</span>","<span class=\"pl-s\">                    # more parameters can go here</span>","<span class=\"pl-s\">                  )&#39;</span>","<span class=\"pl-s\"></span>","<span class=\"pl-s\"></span>","<span class=\"pl-s\"></span>            - <span class=\"pl-ent\">name</span>: <span class=\"pl-s\">Deploy to gh-pages</span>","              <span class=\"pl-ent\">uses</span>: <span class=\"pl-s\">JamesIves/github-pages-deploy-action@releases/v4</span>","              <span class=\"pl-ent\">with</span>:","                  <span class=\"pl-ent\">token</span>: <span class=\"pl-s\">${{ secrets.GITHUB_TOKEN }}</span>","                  <span class=\"pl-ent\">branch</span>: <span class=\"pl-s\">gh-pages</span>","                  <span class=\"pl-ent\">folder</span>: <span class=\"pl-s\">.</span>","                  <span class=\"pl-ent\">single-commit</span>: <span class=\"pl-c1\">true</span>"],"stylingDirectives":null,"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/JuliaPluto/static-export-template/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":false,"repoAlertsPath":"/JuliaPluto/static-export-template/security/dependabot","repoSecurityAndAnalysisPath":"/JuliaPluto/static-export-template/settings/security_analysis","repoOwnerIsOrg":true,"currentUserCanAdminRepo":false},"displayName":"ExportPluto.yaml","displayUrl":"https://github.com/JuliaPluto/static-export-template/blob/main/.github/workflows/ExportPluto.yaml?raw=true","headerInfo":{"blobSize":"2.53 KB","deleteInfo":{"deletePath":"https://github.com/JuliaPluto/static-export-template/delete/main/.github/workflows/ExportPluto.yaml","deleteTooltip":"Fork this repository and delete the file"},"editInfo":{"editTooltip":"Fork this repository and edit the file"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"7a6fabf","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2FJuliaPluto%2Fstatic-export-template%2Fblob%2Fmain%2F.github%2Fworkflows%2FExportPluto.yaml","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"70","truncatedSloc":"58"},"mode":"file"},"image":false,"isCodeownersFile":null,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"YAML","large":false,"loggedIn":true,"newDiscussionPath":"/JuliaPluto/static-export-template/discussions/new","newIssuePath":"/JuliaPluto/static-export-template/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/JuliaPluto/static-export-template/blob/main/.github/workflows/ExportPluto.yaml","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/JuliaPluto/static-export-template/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"renderImageOrRaw":false,"richText":null,"renderedFileInfo":null,"tabSize":4,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"repoOwner":"JuliaPluto","repoName":"static-export-template","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":false,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":"/JuliaPluto/static-export-template/actions/workflows/ExportPluto.yaml","symbols":{"timedOut":false,"notAnalyzed":true,"symbols":[]}},"csrf_tokens":{"/JuliaPluto/static-export-template/branches":{"post":"jdobtoijntZYJW88Qe7GxZEfgHSCjqpBz0lNtRilmtWTxF-odqScOON8w0_zzbTBdK5U2JFUe8Q00GIwWXGVFw"}}},"title":"static-export-template/ExportPluto.yaml at main · JuliaPluto/static-export-template","locale":"en"}